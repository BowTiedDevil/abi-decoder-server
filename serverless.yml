service: abi-decoder-api

provider:
  name: aws
  runtime: python3.8
  memorySize: 128 # 128MB
  timeout: 10
  region: eu-central-1
  endpointType: REGIONAL # Set to regional because the api gateway will be behind a cloudfront distribution
  stage: dev
  tracing: # Enable X-Ray tracing (debugging)
    apiGateway: true
    lambda: true
  iamRoleStatements:
    - Effect: Allow # X-Ray permissions
      Action:
        - xray:PutTraceSegments
        - xray:PutTelemetryRecords
      Resource: "*"
    - Effect: "Allow"
      Action:
        - dynamodb:Query
        - dynamodb:Scan
        - dynamodb:GetItem
        - dynamodb:BatchGetItem
      Resource:
        - "Fn::Join":
            - ":"
            - - "arn:aws:dynamodb"
              - Ref: "AWS::Region"
              - Ref: "AWS::AccountId"
              - "table/prod-abi-decoder-new"
    - Effect: Allow # Lambda logs on cloudwatch
      Action:
        - logs:CreateLogGroup
        - logs:CreateLogStream
        - logs:PutLogEvents
      Resource:
        - "Fn::Join":
            - ":"
            - - "arn:aws:logs"
              - Ref: "AWS::Region"
              - Ref: "AWS::AccountId"
              - "log-group:/aws/lambda/*:*:*"

  environment:
    ETHERSCAN_APIKEY: ${.env:ETHERSCAN_APIKEY}
    AWS_DDB_ABI_DECODER: ${self:custom.tableName}

custom:
  tableName: prod-abi-decoder

functions:
  fetch_signature:
    handler: server/fetch.fetch_signature
    events:
      - http:
          path: fetch/signature
          method: get
  fetch_contract:
    handler: server/fetch.fetch_contract
    events:
      - http:
          path: fetch/contract/{chain}/{address}
          method: get

resources:
  # CORS for api gateway errors
  - ${file(resources/api-gateway-errors.yml)}

plugins:
  - serverless-python-requirements
  - serverless-ignore
  - serverless-offline
